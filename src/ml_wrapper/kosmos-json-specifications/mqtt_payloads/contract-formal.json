{
  "$schema": "http://json-schema.org/draft/2019-09/schema",
  "definitions": {
    "Container": {
      "type": "object",
      "description": "describe a container",
      "properties": {
        "url": {
          "type": "string",
          "description": "is the url of the container (ref. docker container)"
        },
        "tag": {
          "type": "string",
          "description": "is the tag of the container (ref. docker container tag)"
        },
        "arguments": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "defines arguments of this container"
        },
        "environment": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      },
      "required": ["url", "tag", "arguments", "environment"]
    },
    "Time": {
      "type": "string",
      "format": "date-time",
      "description": "Defines the used date time format"
    },
    "Duration": {
      "type": "string",
      "format": "duration",
      "description": "contains the duration format"
    },
    "Model": {
      "type": "object",
      "properties": {
        "url": {
          "type": "string",
          "format": "url"
        },
        "tag": {
          "type": "string"
        }
      },
      "required": ["url", "tag"]
    },
    "Pipelines": {
      "type": "array",
      "description": "defines the analysis pipeline",
      "items": {
        "type": "object",
        "properties": {
          "ml-trigger": {
            "type": "object",
            "description": "defines if an ml tool will be triggered",
            "properties": {
              "type": {
                "type": "string",
                "enum": ["time", "event"]
              },
              "definition": {
              }
            },
            "required": ["type", "definition"],
            "if": {
              "properties": {
                "type": {
                  "enum": ["time"]
                }
              }
            },
            "then": {
              "properties": {
                "definition": {
                  "properties": {
                    "after": {
                      "$ref": "#/definitions/Duration"
                    }
                  },
                  "required": ["after"]
                }
              }
            }
          },
          "pipeline":{
            "type": "array",
            "items": {
              "type": "object",
              "required": ["container", "persistOutput", "from", "to"],
              "properties": {
                "container": {
                  "$ref": "#/definitions/Container"
                },
                "persistOutput":{
                  "type": "boolean",
                  "description": "defines if the output should be persist or not"
                },
                "from": {
                  "anyOf": [
                    {
                      "type": "object",
                      "$ref": "#/definitions/Model"
                    },
                    {
                      "type": "null"
                    }
                  ]
                },
                "to": {
                  "anyOf": [
                    {
                      "type": "object",
                      "$ref": "#/definitions/Model"
                    },
                    {
                      "type": "null"
                    }
                  ]
                }
              }
            }
          },
          "sensors": {
            "type": "array",
            "description": "defines the sensors on which the analyse should be done"
          }
        },
        "required": ["pipeline", "sensors", "ml-trigger"]
      }
    }
  },
  "properties": {
    "contract": {
      "type": "object",
      "description": "contains contract meta data",
      "required": ["valid", "creationTime", "permissions", "id", "partners"],
      "properties": {
        "valid": {
          "description": "defines the start and the end date of the contract",
          "properties": {
            "start": {
              "$ref": "#/definitions/Time",
              "description": "defines the start date of the contract"
            },
            "end": {
              "$ref": "#/definitions/Time",
              "description": "defines the start date of the contract"
            }
          },
          "required": ["start", "end"]
        },
        "creationTime": {
          "$ref": "#/definitions/Time",
          "description": "defines when the contract is created"
        },
        "partners": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "defines the organisations, which are part of the contract"
        },
        "permissions": {
          "description": "defines which groups, which permission on the contract have",
          "properties": {
            "read": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "description": "this array contains all groups which have read permissions"
            },
            "write": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "description": "this array contains all groups which have write permissions"
            }
          }
        },
        "id": {
          "type": "string",
          "description": "is the id of the contract"
        },
	"version": {
		"type": "string",
		"description": "sets the version of the contract"
	}
      }
    },
    "requiredTechnicalContainers": {
      "type": "array",
      "items": {
        "type": "object",
        "properties": {
          "system": {
            "type": "string",
            "description": "defines the system on which the containers are required"
          },
          "containers": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/Container"
            },
            "description": "are the required technical containers"
          }
        }
      },
      "description": "defines the required technical containers"
    },
    "machine": {
      "type": "string",
      "description": "is the unique identifier of the machine"
    },
    "kosmosLocalSystems": {
      "type": "array",
      "items": {
        "type": "string"
      },
      "description": "defines all KOSMoS-Local systems, which uses this contract"
    },
    "sensors": {
      "type": "array",
      "items": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "name of the sensor"
          },
          "storageDuration": {
            "type": "array",
            "description": "defines the storage duration of this sensor",
            "items": {
              "type": "object",
              "properties": {
                "systemName": {
                  "type": "string",
                  "description": "is the name of the system, the value can be either 'analyse' or a system, which listed in kosmosLocalSystems"
                },
                "duration": {
                  "$ref": "#/definitions/Duration",
                  "description": "defines how long the value should be stored"
                }
              },
              "required": ["systemName", "duration"]
            }
          },
          "meta": {
            "type": "object",
            "description": "placeholder to include meta data of this sensor"
          }
        },
        "required": ["name", "storageDuration", "meta"]
      }
    },
    "checkSignatures": {
      "type": "boolean",
      "description": "defines if all programs should check the message signature or not (end to end validation)"
    },
    "analysis": {
      "type": "object",
      "properties": {
        "enable": {
          "type": "boolean",
          "description": "defines if analysis is enabled or not"
        },
        "systems": {
          "type": "array",
          "items":{
            "type": "object",
            "properties": {
              "system": {
                "type": "string",
                "description": "identify the system. The value can be either cloud or a name which are defined in the property kosmosLocalSystems"
              },
              "enable": {
                "type": "boolean",
                "description": "defines if this analysis part is enabled or not"
              },
              "pipelines": {
                "$ref": "#/definitions/Pipelines",
                "description": "defines the pipeline for this specific system"
              },
              "connection": {
                "description": "defines the connection to the analysis cloud",
                "type": "object",
                "properties": {
                  "url": {
                    "description": "is the url to the analysis-cloud-connector",
                    "type": "string",
                    "format": "url"
                  },
                  "user-mgmt": {
                    "description": "is the usrl to the user-mgmt on the analysis-cloud",
                    "type": "string",
                    "format": "url"
                  },
                  "interval": {
                    "$ref": "#/definitions/Duration",
                    "description": "defines how long message should be collected before they transmitted to the endpoint"
                  },
                  "container": {
                    "description": "defines the connector to the cloud system",
                    "$ref": "#/definitions/Container"
                  }
                },
                "required": ["url", "user-mgmt", "interval", "container"]
              }
            },
            "required": ["system", "enable", "pipelines"]
          }
        }
      }
    },
    "blockchain": {
      "type": "object",
      "description": "contains the blockchain specifics for this contract"
    },
    "machineConnection": {
      "type": "object",
      "description": "placeholder to define the connection to the machine"
    },
    "metadata": {
      "type": "object",
      "description": "placeholder to add meta data of this message"
    }
  },
  "required": ["machine", "sensors"]
}
